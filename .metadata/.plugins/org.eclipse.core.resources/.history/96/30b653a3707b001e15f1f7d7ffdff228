


//		author                                    Umang Bhatnagar     @umangbhatnagar@virtusa.com
//		*************************************     Here the whole script is written keeping MACOS		    *************************************
//		*************************************	  in mind. "MMTUtilityMethods" class has been written	    *************************************			
//		*************************************	  for the low level implementation by segregating into 	    *************************************
//		*************************************	  different methods. These methods are later called   	    *************************************
//		*************************************	  as in need in class "MMTChromeAndFireFox"	to come		    *************************************
//		*************************************	  up with a meaningful script as asked for.					*************************************




package com.avirtusaa;

import org.openqa.selenium.WebElement;


public class TestDriverClass {

	
	
	private String loginErrorText = null;
	private BaseUtilitiesTestClass baseUtilitiesTestClassI;


	public TestDriverClass()
	
	{
		System.out.println("TestDriverClass class k consutructor k andar hun aur");
		System.out.println("*************isne bheja*******************: "+ new Throwable().getStackTrace()[1].getClassName());
		
		this.baseUtilitiesTestClassI = new BaseUtilitiesTestClass("Chrome", 2000); 
		
		
	}

	
	
	public void sauceDemoTestDriver(String userNameDataProvided, String passwordDataProvided) throws InterruptedException
	{
		
		Thread.sleep(3000);
		System.err.println("Username: "+userNameDataProvided+ '\t'+ '\t'+ '\t'+ '\t' + "Password: "+passwordDataProvided);
		baseUtilitiesTestClassI.maximizeBrowser();
		baseUtilitiesTestClassI.visitPage("https://www.saucedemo.com/");
		
		WebElement useName = baseUtilitiesTestClassI.elementGrabber("//input[@id = 'user-name']");
		WebElement passwordThrown = baseUtilitiesTestClassI.elementGrabber("//input[@id = 'password']"); 
		WebElement login =  baseUtilitiesTestClassI.elementGrabber("//input[@id = 'login-button']"); 
		
		
		

		baseUtilitiesTestClassI.typeStringValues(useName, userNameDataProvided);
		baseUtilitiesTestClassI.typeStringValues(passwordThrown, passwordDataProvided);
		
		if(userNameDataProvided.equals("locked_out_user"))
		{
			WebElement errorLogin = baseUtilitiesTestClassI.elementGrabber("//h3[@data-test = 'error']");
			baseUtilitiesTestClassI.waitForAnElementTextDiscovery(errorLogin, "Epic sadface: Sorry, this user has been locked out.");
			this.loginErrorText = baseUtilitiesTestClassI.
		}
		
		
		
		
		baseUtilitiesTestClassI.waitForAnElement(login);
		baseUtilitiesTestClassI.clickTheElement(login);
		
	    Thread.sleep(3000);
		
		
		
		
		
	}
	
	
	public void sauceDemoTestQuitBrowser()
	{
		baseUtilitiesTestClassI.terminateBrowser();
	}
	

	




}
